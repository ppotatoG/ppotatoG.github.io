---
layout: post
title:  "약수의 개수와 덧셈"
date:   2022-01-08
categories: programmers
---

[약수의 개수와 덧셈](https://programmers.co.kr/learn/courses/30/lessons/77884?language=javascript)

### 처음 제출한 답

빈 배열 `arr`, 0을 담은 `answer`

`min`부터 `max`를 돌며 `arr`에 추가

숫자의 약수는 보통 짝수인데.. 숫자가 제곱수라면 약수는 홀수가 된다

중복문에서 숫자가 제곱수인지를 확인 해 `answer`에서 값을 더하거나 빼주기

```js
function solution(min, max) {
    let arr = [];
    let answer = 0;

    for(let i = min; i < max + 1; i++ ){
        arr.push(i);
    }

    for(let i = 0; i < arr.length; i++){
        Number.isInteger(Math.sqrt(arr[i])) ? answer = answer - arr[i] : answer = answer + arr[i]
    }

    return answer;
}
```

### 두번째

빈 배열 `arr` 없어도 문제를 풀 수 있다
```js
function solution(min, max) {
    let answer = 0;
    
    for(let i = min ; i < max + 1; i++){
        Number.isInteger(Math.sqrt(i)) ? answer = answer - i : answer = answer + i;
    }

    return answer;
}
```

### 최근 보충한 내용

[Arrat.from](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/from)으로 길이는 `right - left + 1`, 값은 `left + idx`인 배열을 만들어줌

[reduce](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)로 제곱수를 확인 해 값을 더하거나 빼주기~!

```js
function solution(left, right) {
    return Array.from(
    {
        length : right - left + 1
    }
    , (val, idx) => {
        return left + idx;
    })
    .reduce((a, b) => {
        return Number.isInteger(Math.sqrt(b)) ? a - b : a + b;
    });
}
```